From 442ab5bbc1e2749adf0700eb542446db9d746c70 Mon Sep 17 00:00:00 2001
From: Marcelo Vanzin <vanzin@cloudera.com>
Date: Fri, 2 Jun 2017 16:30:52 -0700
Subject: [PATCH 517/517] CDH-54549. Propagate user-defined Hadoop config to
 Hive client.

(cherry picked from commit 968431f6c81790b516c16006f67626d6d7c9ddf8)
---
 .../org/apache/spark/sql/hive/HiveContext.scala    |   13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/sql/hive/src/main/scala/org/apache/spark/sql/hive/HiveContext.scala b/sql/hive/src/main/scala/org/apache/spark/sql/hive/HiveContext.scala
index c249f3c..c6936ba 100644
--- a/sql/hive/src/main/scala/org/apache/spark/sql/hive/HiveContext.scala
+++ b/sql/hive/src/main/scala/org/apache/spark/sql/hive/HiveContext.scala
@@ -214,7 +214,7 @@ class HiveContext private[hive](
     val loader = new IsolatedClientLoader(
       version = IsolatedClientLoader.hiveVersion(hiveExecutionVersion),
       execJars = Seq(),
-      config = newTemporaryConfiguration(),
+      config = newTemporaryConfiguration() ++ userConfigOverrides,
       isolationOn = false,
       baseClassLoader = Utils.getContextOrSparkClassLoader)
     loader.createClient().asInstanceOf[ClientWrapper]
@@ -249,7 +249,8 @@ class HiveContext private[hive](
     logInfo("default warehouse location is " + defaultWarehouseLocation)
 
     // `configure` goes second to override other settings.
-    val allConfig = metadataConf.asScala.map(e => e.getKey -> e.getValue).toMap ++ configure
+    val allConfig = metadataConf.asScala.map(e => e.getKey -> e.getValue).toMap ++ configure ++
+      userConfigOverrides
 
     val isolatedLoader = if (hiveMetastoreJars == "builtin") {
       if (hiveExecutionVersion != hiveMetastoreVersion) {
@@ -541,6 +542,14 @@ class HiveContext private[hive](
     }.toMap
   }
 
+  /** The user-defined Hadoop configuration entries stored in SparkConf. */
+  private def userConfigOverrides: Map[String, String] = {
+    val hadoopPrefix = "spark.hadoop."
+    sc.conf.getAll.collect { case (k, v) if k.startsWith(hadoopPrefix) =>
+      k.substring(hadoopPrefix.length()) -> v
+    }.toMap
+  }
+
   /**
    * SQLConf and HiveConf contracts:
    *
-- 
1.7.9.5

